/*
* Copyright (C) 2012 Doubango Telecom <http://www.doubango.org>
* License: BSD
* This file is part of Open Source sipML5 solution <http://www.sipml5.org>
*/
tsip_header_Subscription_State.prototype = Object.create(tsip_header.prototype);
%%{
	machine tsip_machine_parser_header_Subscription_State;

	# Includes
	include tsip_machine_utils "./tsip_machine_utils.jrl";
	
	action tag{
		i_tag_start = p;
	}

	action parse_state{
		hdr_Subscription_State.s_state = tsk_ragel_parser_get_string(s_str, p, i_tag_start);
	}

	action parse_reason{
	    hdr_Subscription_State.s_reason = tsk_ragel_parser_get_string(s_str, p, i_tag_start);
	}

	action parse_expires{
	    hdr_Subscription_State.i_expires = tsk_ragel_parser_get_int(s_str, p, i_tag_start);
	}

	action parse_retry_after{
	    hdr_Subscription_State.i_retry_after = tsk_ragel_parser_get_int(s_str, p, i_tag_start);
	}

	action parse_param{
		tsk_ragel_add_param(s_str, p, i_tag_start, hdr_Subscription_State.ao_params);
	}

	action eob{
	}
	
	subexp_params = (( "reason"i EQUAL token>tag %parse_reason ) | ( "expires"i EQUAL delta_seconds>tag %parse_expires ) | ( "retry-after"i EQUAL delta_seconds>tag %parse_retry_after ))@1 | generic_param>tag %parse_param @0;
	Subscription_State = ( "Subscription-State"i ) HCOLON token>tag %parse_state ( SEMI subexp_params )*;
	
	# Entry point
	main := Subscription_State :>CRLF @eob;

}%%

%%write data;

function tsip_header_Subscription_State(s_state, s_reason, i_expires, i_retry_after){
	tsip_header.call(this, tsip_header_type_e.Subscription_State);
    this.s_state = s_state;
    this.s_reason = s_reason;
    this.i_expires = i_expires;
    this.i_retry_after = i_retry_after;
}

tsip_header_Subscription_State.prototype.toString = function(){
    var s_str = tsk_string_format("{0}{1}{2}",
                    this.s_state,
			
			        this.s_reason ? ";reason=" : "",
			        this.s_reason ? this.s_reason : ""
                );
    if(this.i_expires >= 0){
        s_str += tsk_string_format(";expires={0}", this.i_expires);
    }
    if(this.i_retry_after >= 0){
        s_str += tsk_string_format(";retry-after={0}", this.i_retry_after);
    }
    return s_str;
}

tsip_header_Subscription_State.prototype.Parse = function(s_str){
    var cs = 0;
	var p = 0;
	var pe = s_str.length;
	var eof = pe;
	var data = tsk_buff_str2ib(s_str);
	var i_tag_start;	
	var hdr_Subscription_State = new tsip_header_Subscription_State(null, null, -1, -1);
	
	%%write init;
	%%write exec;
	
	if( cs < %%{ write first_final; }%% ){
		tsk_utils_log_error("Failed to parse 'Subscription-State' header: " + s_str);
		return null;
	}
	
	return hdr_Subscription_State;
}
