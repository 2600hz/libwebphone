/*
* Copyright (C) 2012 Doubango Telecom <http://www.doubango.org>
* License: BSD
* This file is part of Open Source sipML5 solution <http://www.sipml5.org>
*/
tsip_header_Session_Expires.prototype = Object.create(tsip_header.prototype);
var TSIP_SESSION_EXPIRES_DEFAULT_VALUE = 1800;

%%{
	machine tsip_machine_parser_header_Session_Expires;

	# Includes
	include tsip_machine_utils "./tsip_machine_utils.jrl";
	
	action tag{
		i_tag_start = p;
	}

	action parse_delta_seconds{
	    hdr_session_expires.i_delta_seconds = tsk_ragel_parser_get_int(s_str, p, i_tag_start);
	}

	action is_uas{
		hdr_session_expires.b_refresher_uas = true;
	}
	action is_uac{
		hdr_session_expires.b_refresher_uas = false;
	}

	action parse_param{
	    tsk_ragel_add_param(s_str, p, i_tag_start, hdr_session_expires.ao_params);
	}

	action eob{
	}
	
	refresher_param = "refresher"i EQUAL ( "uas"i>tag %is_uas | "uac"i>tag %is_uac );
	se_params = (refresher_param)@1 | (generic_param)@0>tag %parse_param;
	Session_Expires = ( "Session-Expires"i | "x"i ) HCOLON delta_seconds>tag %parse_delta_seconds ( SEMI se_params )*;
	
	# Entry point
	main := Session_Expires :>CRLF @eob;

}%%


%%write data;

function tsip_header_Session_Expires(i_delta_seconds, b_refresher_uas){
	tsip_header.call(this, tsip_header_type_e.Session_Expires);
    this.i_delta_seconds = i_delta_seconds;
    this.b_refresher_uas = b_refresher_uas;
}

tsip_header_Session_Expires.prototype.toString = function(){
    if(this.i_delta_seconds >= 0){
        return tsk_string_format("{0};refresher={1}", this.i_delta_seconds, this.b_refresher_uas ? "uas" : "uac");
    }
    return null;
}

tsip_header_Session_Expires.prototype.Parse = function(s_str){
    var cs = 0;
	var p = 0;
	var pe = s_str.length;
	var eof = pe;
	var data = tsk_buff_str2ib(s_str);
	var i_tag_start;	
	var hdr_session_expires = new tsip_header_Session_Expires(TSIP_SESSION_EXPIRES_DEFAULT_VALUE, false);
	
	%%write init;
	%%write exec;
	
	if( cs < %%{ write first_final; }%% ){
		tsk_utils_log_error("Failed to parse 'Session-Expires' header: " + s_str);
		return null;
	}
	
	return hdr_session_expires;
}